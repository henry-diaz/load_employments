= form_for :q, url: root_url, html: { method: :get, class: 'form-vertical' } do |f|
  .row
    .col-xs-12.col-sm-6
      .form-group
        %label
          %strong
            Fuente
        %br
        %label.radio-inline
          = f.radio_button :source, 1, checked: (params[:q][:source].to_i == 1 rescue true)
          Estadística
        &nbsp
        %label.radio-inline
          = f.radio_button :source, 0, checked: (params[:q][:source].to_i == 0 rescue false)
          Informática
      .form-group
        %label
          %strong
            Sectores
        = f.select :sector, options_for_select(EmpMonthMatview::SECTORS.invert, (params[:q][:sector] rescue '')), { }, { class: 'form-control' }
      - if @source == 'tic'
        .form-group
          %label
            %strong
              Rama de Actividad Económica
          = f.collection_select :categories, @ciuu_categories, :code, :name, { selected: (params[:q][:categories] rescue '') }, {class: 'form-control select2-activities', multiple: true}
        .form-group
          %label
            %strong
              De acuerdo a ley de presupuesto
          = f.select :budgets, options_for_select(EmpMonthMatview::BUDGETS.invert, (params[:q][:budgets] rescue '')), {}, { class: 'form-control select2-institutions', multiple: true }
        .form-group
          %label
            %strong
              Por Organos del Estado
          = f.select :states, options_for_select(EmpMonthMatview::STATES.invert, (params[:q][:states] rescue '')), {}, { class: 'form-control  select2-areas', multiple: true }
        .form-group
          %label
            %strong
              Por áreas de gestión
          = f.select :areas, options_for_select(EmpMonthMatview::AREAS.invert, (params[:q][:areas] rescue '')), {}, { class: 'form-control  select2-ministries', multiple: true }
        .form-group
          %label
            %strong
              Por Ministerios e Instituciones
          = f.select :ministries, options_for_select(EmpMonthMatview::MINISTRIES.invert, (params[:q][:ministries] rescue '')), {}, { class: 'form-control  select2-ministries-new', multiple: true }
      - else
        .form-group
          %label
            %strong
              Por clasificación en el anuario
          = f.select :anuaries, options_for_select(EmpMonthMatview::ANUARIES.invert, (params[:q][:anuaries] rescue '')), {}, { class: 'form-control  select2-anuaries', multiple: true }
      .form-group
        %label
          %strong
            Patronos
        = f.collection_select :employers, @custom_employers, :nit, :name, { selected: (params[:q][:employers] rescue '')}, { class: 'form-control  select2-employers', multiple: true }
    .col-xs-12.col-sm-6
      .form-group
        %label
          %strong
            Mostrar
        = f.select :times, options_for_select(EmpMonthMatview::TIMES.invert, (params[:q][:times] rescue '1')), {}, {class: 'form-control'}
      .form-group
        %label
          %strong
            Desde
        = f.collection_select :start_at, @times, :period, :period, { selected: (params[:q][:start_at] rescue 201501) }, {class: 'form-control'}
      .form-group
        %label
          %strong
            Hasta
        = f.collection_select :end_at, @times, :period, :period, { selected: (params[:q][:end_at] rescue 201601) }, {class: 'form-control'}
      - if @source == 'tic'
        .form-group
          %label
            %strong
              Desagregado por
          = f.select :group_by, options_for_select(EmpMonthMatview::GROUP_BY.invert, (params[:q][:group_by] rescue '0')), {}, {class: 'form-control'}
      - else
        .form-group
          %label
            %strong
              Desagregado por
          = f.select :group_by, options_for_select(EmpMonthMatview::GROUP_BY_STATISTICS.invert, (params[:q][:group_by] rescue '0')), {}, {class: 'form-control'}
      - if @source == 'tic'
        %div
          %label.radio-inline
            = f.radio_button :status, 0, checked: (params[:q][:status].to_i == 0 rescue true)
            Presentadas
          &nbsp
          %label.radio-inline
            = f.radio_button :status, 1, checked: (params[:q][:status].to_i == 1 rescue false)
            Pagadas
      .checkbox
        %label
          = f.check_box :show_patron, { checked: (params[:q][:show_patron] == '1' rescue false) }, '1', '0'
          Mostrar patronos
      %br
      = button_tag type: :submit, name: nil, class: 'btn btn-primary' do
        Consultar
      = link_to "Descargar Excel", export_url(q: params[:q] ? params[:q].to_unsafe_h : nil), class: 'btn btn-success'
      = link_to "Limpiar filtros", root_url, class: 'btn btn-warning'

/ EMPLEOS
.row
  %br
  %h4.title
    NÚMERO DE EMPLEOS
  .table-responsive
    %table.table.table-condensed{ style: 'border-collapse: collapse;' }
      / HEADER
      %thead
        %tr
          %th
            &nbsp
          - @uniq_times.each_with_index do |t, i|
            %th{ style: 'text-align: center;', class: i % 2 == 0 ? 'odd' : nil }
              = t
      / BODY
      %tbody
        / Sectors
        - @employments.group_by{|e| e.sector}.each do |k, v|
          %tr.sector
            %td
              = EmpMonthMatview::SECTORS[k.to_s].upcase
            - @uniq_times.each_with_index do |t, i|
              - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
              - if employments
                %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.sum(&:total_emp).try(:round, 4)
              - else
                %td{ class: i % 2 == 0 ? 'odd' : nil }
                  &nbsp
          / Detail
          - if (params[:q][:group_by].to_i != 0 rescue false)
            / Grouped info
            - v.group_by{ |o| o.send(@group_by_attr) }.each do |k, v|

              %tr{ class: (params[:q][:show_patron].to_i == 1 rescue false) ? 'sector' : nil }
                %td
                  &thinsp;
                  = EmpMonthMatview.grouped_name(k, @group_by_id, ciiu_categories)
                - @uniq_times.each_with_index do |t, i|
                  - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                  - if employments
                    %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.sum(&:total_emp).try(:round, 4)
                  - else
                    %td{ class: i % 2 == 0 ? 'odd' : nil }
                      &nbsp
              - if (params[:q][:show_patron].to_i == 1 rescue false)
                - v.group_by{ |o| o.name }.each do |k, v|
                  %tr
                    %td
                      &thinsp;&thinsp;
                      = k
                    - @uniq_times.each_with_index do |t, i|
                      - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                      - if employments
                        %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.sum(&:total_emp).try(:round, 4)
                      - else
                        %td{ class: i % 2 == 0 ? 'odd' : nil }
                          &nbsp
          - elsif (params[:q][:show_patron].to_i == 1 rescue false)
            - v.group_by{ |o| o.name }.each do |k, v|
              %tr
                %td
                  &thinsp;
                  = k
                - @uniq_times.each_with_index do |t, i|
                  - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                  - if employments
                    %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.sum(&:total_emp).try(:round, 4)
                  - else
                    %td{ class: i % 2 == 0 ? 'odd' : nil }
                      &nbsp

        %tr.sector
          %td
            TOTAL DE EMPLEOS
          - @uniq_times.each_with_index do |t, i|
            - employments = @year_selected ? @employments.select{|o| o.year.to_i == t.to_i} : @employments.select{|o| o.period.to_i == t.to_i}
            - if employments
              %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.sum(&:total_emp).try(:round, 4)
            - else
              %td{ class: i % 2 == 0 ? 'odd' : nil }
                &nbsp
/ SALARIOS
.row
  %br
  %h4.title
    SALARIOS
  .table-responsive
    %table.table.table-condensed{ style: 'border-collapse: collapse;' }
      / HEADER
      %thead
        %tr
          %th
            &nbsp
          - @uniq_times.each_with_index do |t, i|
            %th{ style: 'text-align: center;', class: i % 2 == 0 ? 'odd' : nil }
              = t
      / BODY
      %tbody
        / Sectors
        - @employments.group_by{|e| e.sector}.each do |k, v|
          %tr.sector
            %td
              = EmpMonthMatview::SECTORS[k.to_s].upcase
            - @uniq_times.each_with_index do |t, i|
              - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
              - if employments
                %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency employments.sum(&:amount)
              - else
                %td{ class: i % 2 == 0 ? 'odd' : nil }
                  &nbsp
          / Detail
          - if (params[:q][:group_by].to_i != 0 rescue false)
            / Grouped info
            - v.group_by{ |o| o.send(@group_by_attr) }.each do |k, v|
              %tr{ class: (params[:q][:show_patron].to_i == 1 rescue false) ? 'sector' : nil }
                %td
                  &thinsp;
                  = EmpMonthMatview.grouped_name(k, @group_by_id, ciiu_categories)
                - @uniq_times.each_with_index do |t, i|
                  - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                  - if employments
                    %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency employments.sum(&:amount)
                  - else
                    %td{ class: i % 2 == 0 ? 'odd' : nil }
                      &nbsp
              - if (params[:q][:show_patron].to_i == 1 rescue false)
                - v.group_by{ |o| o.name }.each do |k, v|
                  %tr
                    %td
                      &thinsp;&thinsp;
                      = k
                    - @uniq_times.each_with_index do |t, i|
                      - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                      - if employments
                        %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency employments.sum(&:amount)
                      - else
                        %td{ class: i % 2 == 0 ? 'odd' : nil }
                          &nbsp
          - elsif (params[:q][:show_patron].to_i == 1 rescue false)
            - v.group_by{ |o| o.name }.each do |k, v|
              %tr
                %td
                  &thinsp;
                  = k
                - @uniq_times.each_with_index do |t, i|
                  - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                  - if employments
                    %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency employments.sum(&:amount)
                  - else
                    %td{ class: i % 2 == 0 ? 'odd' : nil }
                      &nbsp

        %tr.sector
          %td
            TOTAL DE SALARIOS
          - @uniq_times.each_with_index do |t, i|
            - employments = @year_selected ? @employments.select{|o| o.year.to_i == t.to_i} : @employments.select{|o| o.period.to_i == t.to_i}
            - if employments
              %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency employments.sum(&:amount)
            - else
              %td{ class: i % 2 == 0 ? 'odd' : nil }
                &nbsp
/ PER CAPITA
.row
  %br
  %h4.title
    SALARIOS PER CAPITA
  .table-responsive
    %table.table.table-condensed{ style: 'border-collapse: collapse;' }
      / HEADER
      %thead
        %tr
          %th
            &nbsp
          - @uniq_times.each_with_index do |t, i|
            %th{ style: 'text-align: center;', class: i % 2 == 0 ? 'odd' : nil }
              = t
      / BODY
      %tbody
        / Sectors
        - @employments.group_by{|e| e.sector}.each do |k, v|
          %tr.sector
            %td
              = EmpMonthMatview::SECTORS[k.to_s].upcase
            - @uniq_times.each_with_index do |t, i|
              - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
              - if employments
                %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency ((employments.sum(&:amount) / employments.sum(&:total_emp) rescue 0))
              - else
                %td{ class: i % 2 == 0 ? 'odd' : nil }
                  &nbsp
          / Detail
          - if (params[:q][:group_by].to_i != 0 rescue false)
            / Grouped info
            - v.group_by{ |o| o.send(@group_by_attr) }.each do |k, v|
              %tr{ class: (params[:q][:show_patron].to_i == 1 rescue false) ? 'sector' : nil }
                %td
                  &thinsp;
                  = EmpMonthMatview.grouped_name(k, @group_by_id, ciiu_categories)
                - @uniq_times.each_with_index do |t, i|
                  - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                  - if employments
                    %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency (employments.sum(&:amount) / employments.sum(&:total_emp)) rescue 0
                  - else
                    %td{ class: i % 2 == 0 ? 'odd' : nil }
                      &nbsp
              - if (params[:q][:show_patron].to_i == 1 rescue false)
                - v.group_by{ |o| o.name }.each do |k, v|
                  %tr
                    %td
                      &thinsp;&thinsp;
                      = k
                    - @uniq_times.each_with_index do |t, i|
                      - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                      - if employments
                        %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency (employments.sum(&:amount) / employments.sum(&:total_emp)) rescue 0
                      - else
                        %td{ class: i % 2 == 0 ? 'odd' : nil }
                          &nbsp
          - elsif (params[:q][:show_patron].to_i == 1 rescue false)
            - v.group_by{ |o| o.name }.each do |k, v|
              %tr
                %td
                  &thinsp;
                  = k
                - @uniq_times.each_with_index do |t, i|
                  - employments = @year_selected ? v.select{|o| o.year.to_i == t.to_i} : v.select{|o| o.period.to_i == t.to_i}
                  - if employments
                    %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency (employments.sum(&:amount) / employments.sum(&:total_emp)) rescue 0
                  - else
                    %td{ class: i % 2 == 0 ? 'odd' : nil }
                      &nbsp

        %tr.sector
          %td
            TOTAL PER CAPITA
          - @uniq_times.each_with_index do |t, i|
            - employments = @year_selected ? @employments.select{|o| o.year.to_i == t.to_i} : @employments.select{|o| o.period.to_i == t.to_i}
            - if employments
              %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_to_currency (employments.sum(&:amount) / employments.sum(&:total_emp)) rescue 0
            - else
              %td{ class: i % 2 == 0 ? 'odd' : nil }
                &nbsp
.row
  %br
  %h4.title
    Indicadores DIGESTYC
  .table-responsive
    %table.table.table-condensed{ style: 'border-collapse: collapse;' }
      / HEADER
      %thead
        %tr
          %th
            &nbsp
          - @uniq_times.each_with_index do |t, i|
            %th{ style: 'text-align: center;', class: i % 2 == 0 ? 'odd' : nil }
              = t
      %tbody
        %tr
          %td
            PEA
          - @uniq_times.each_with_index do |t, i|
            - employments = @year_selected ? @employments.select{|o| o.year.to_i == t.to_i} : @employments.select{|o| o.period.to_i == t.to_i}
            - if employments
              %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.first.pea
            - else
              %td{ colspan: 2, class: i % 2 == 0 ? 'odd' : nil }
                &nbsp
        %tr
          %td
            Población ocupado
          - @uniq_times.each_with_index do |t, i|
            - employments = @year_selected ? @employments.select{|o| o.year.to_i == t.to_i} : @employments.select{|o| o.period.to_i == t.to_i}
            - if employments
              %td.data{class: i % 2 == 0 ? 'odd' : nil}= number_with_delimiter employments.first.occupied
            - else
              %td{ colspan: 2, class: i % 2 == 0 ? 'odd' : nil }
                &nbsp
-# %ul
-#   - @employments.each do |emp|
-#     %li
-#       = emp.inspect
